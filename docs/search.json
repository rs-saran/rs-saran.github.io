[
  {
    "objectID": "sophy/index.html",
    "href": "sophy/index.html",
    "title": "RS Saran",
    "section": "",
    "text": "Redirecting…\n\n\n\n\n\n\nIf you are not redirected automatically, follow this link."
  },
  {
    "objectID": "projects/20250105_serene_solace_sophy/index.html",
    "href": "projects/20250105_serene_solace_sophy/index.html",
    "title": "Serene Solace - Sophy",
    "section": "",
    "text": "source code  demo chat \n\nIntroduction\nIn today’s fast-paced world, mental health is more important than ever. Yet, many people struggle with their emotional well-being, often facing issues alone. Stress, anxiety, and overwhelming thoughts can build up without a clear outlet, leaving individuals feeling isolated and unheard. Fortunately, there’s an old but powerful piece of advice: “Talking to a friend about your problems can help.” When we share our struggles, it often helps to sort through them, gain new perspectives, and release the tension that builds up over time.\nIt’s important to note that talking to someone is not a cure-all for mental health problems. If you are struggling with a serious mental health condition, it is important to seek professional help from a therapist or counselor. However, talking to someone you trust can be a helpful first step in managing your mental health.\nBut not everyone has someone they can turn to when they need it most. This gap presents a significant challenge. How can we provide people with a safe, understanding space to express their feelings and navigate their mental health struggles? - Serene Solace\n\n\nScope\n\nProvides emotional support through empathetic, personalized conversations.\nMaintains user confidentiality.\nGuides user to Crisis Management helpline when required.\nAnswers company (serene solace) related questions.\n\n\n\nModel Selection\nWhen deciding on the right approach to model selection for Serene Solace, two key factors must be carefully considered: whether to build a model from scratch or use pretrained models, and the financial implications of selecting an API or self-hosted solution.\n\nBuild from Scratch vs. Use Pretrained Models: Building a model from the ground up requires significant investment in terms of time, expertise, and computational resources. This process is costly and can delay deployment. On the other hand, using pretrained models offers a practical and cost-effective solution. These models have already been trained on large datasets and are ready for fine-tuning, saving both time and resources while providing high-quality performance from the start.\nAPI Costs vs. Self-Hosting: When considering the use of language models, the decision to use APIs versus hosting a model locally comes down to ongoing costs, control, and privacy. Using an API service can incur substantial recurring costs, especially as the volume of users and requests grows. These costs can add up over time, potentially making API usage less cost-effective for long-term scalability. Additionally, APIs often come with limitations on data privacy, as user data may be processed by third-party services.\n\nOn the other hand, self-hosting an open-source model allows for full control over data privacy and confidentiality, which is crucial for an emotional support service. By hosting the model locally, we can ensure that sensitive information remains within the organization’s secure infrastructure, addressing privacy concerns. A viable and cost-effective option for self-hosting is the Llama 3.2:1b model, an open-source, lightweight language model. It offers a balance of performance and efficiency, reducing the need for expensive cloud API services while still providing high-quality, empathetic conversations.\nIn conclusion, for Serene Solace’s focus on providing confidential, emotionally supportive conversations, using an open-source model like Llama 3.2:1b and hosting it locally proves to be both cost-effective and privacy-conscious. This solution minimizes the financial burden of API usage while ensuring user data stays secure.\n\n\nWorkflow\n\n\nState Graph:\n\n\nSophy uses langgraph to build a state graph.\nThe graph manages transitions between nodes: Agent, Sophy, CompanyQA, and CrisisHandler.\n\n\nAgent Node:\n\n\nDetermines the appropriate route based on user input:\nSophy: Normal conversation for mental health support.\nCrisisHandler: Directs the user to an active crisis helpline.\nCompanyQA: Answers company-related queries.\n\n\nSophy:\n\n\nUses llama3.21b model to chat empathetically.\nDynamically summarizes ongoing exchanges to maintain context and improve conversation flow.\n\n\nCompany Q&A:\n\n\nLeverages FAISS for document retrieval and answers user questions based on the company.md file.\n\n\nCrisis Handling:\n\n\nProvides a helpline number if harmful intent is detected.\n\n\n\nFuture Improvements\n\nSmoother integration between flows.\nUI for the chat.\nExpand the knowledge base for company Q&A.\nEnhance the detection mechanism for harmful intent.\nMulti User Interactions."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "The Tale of the Twin Lands\n\n\n\n\n\n\nFiction\n\n\n\nA short fictional tale of an ancient continent with a towering mountain spine \n\n\n\n\n\nDec 9, 2024\n\n\nSai Saran Reddy\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "me_in_moments/index.html",
    "href": "me_in_moments/index.html",
    "title": "RS Saran",
    "section": "",
    "text": "Redirecting…\n\n\n\n\n\n\nIf you are not redirected automatically, follow this link."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m a data scientist with a versatile skill set spanning data engineering, analytics, and machine learning. I thrive on tackling complex problems, uncovering actionable insights, and designing solutions that make a difference.\n\n\n\nData Scientist at Viacom18 | Aug 2023 - Present  After my internship, I transitioned into a full-time role as a data scientist, where I focus on deriving insights to drive business decisions, optimizing data pipelines, and developing machine learning models.\nData Science Intern at Viacom18 | Jan 2023 - June 2023  I began my journey as a data science intern, gaining hands-on experience in data engineering and analytics, contributing to key projects, and laying the foundation for my future career in data science.\n\n\n\n\n\nComputer Vision: I’ve always been fascinated by computer vision because it’s like giving machines the ability to see and understand the world in a way that’s almost human—and sometimes even better. Whether it’s identifying objects, recognizing faces, analyzing scenes, or even detecting emotions in images and videos, the potential of this field is incredible. The applications are endless, from advancing self-driving cars to improving medical diagnoses and treatments. On a more personal note, I also love how computer vision can potentially bring stories to life in entertainment, helping create visuals for web novels, comics, and movies that I’m passionate about.\nStrategy Analytics: I’m fascinated by how analytics can reveal the impact of different business strategies. Using data to evaluate decisions and predict outcomes allows organizations to optimize their approach and drive success with greater precision."
  },
  {
    "objectID": "about.html#profession",
    "href": "about.html#profession",
    "title": "About",
    "section": "",
    "text": "I’m a data scientist with a versatile skill set spanning data engineering, analytics, and machine learning. I thrive on tackling complex problems, uncovering actionable insights, and designing solutions that make a difference.\n\n\n\nData Scientist at Viacom18 | Aug 2023 - Present  After my internship, I transitioned into a full-time role as a data scientist, where I focus on deriving insights to drive business decisions, optimizing data pipelines, and developing machine learning models.\nData Science Intern at Viacom18 | Jan 2023 - June 2023  I began my journey as a data science intern, gaining hands-on experience in data engineering and analytics, contributing to key projects, and laying the foundation for my future career in data science.\n\n\n\n\n\nComputer Vision: I’ve always been fascinated by computer vision because it’s like giving machines the ability to see and understand the world in a way that’s almost human—and sometimes even better. Whether it’s identifying objects, recognizing faces, analyzing scenes, or even detecting emotions in images and videos, the potential of this field is incredible. The applications are endless, from advancing self-driving cars to improving medical diagnoses and treatments. On a more personal note, I also love how computer vision can potentially bring stories to life in entertainment, helping create visuals for web novels, comics, and movies that I’m passionate about.\nStrategy Analytics: I’m fascinated by how analytics can reveal the impact of different business strategies. Using data to evaluate decisions and predict outcomes allows organizations to optimize their approach and drive success with greater precision."
  },
  {
    "objectID": "about.html#hobby",
    "href": "about.html#hobby",
    "title": "About",
    "section": "Hobby",
    "text": "Hobby\nI’m a huge fan of martial cultivation stories, especially mangas, manhwas, and web novels. There’s just something about the mix of intense action, character growth, and world-building that really pulls me in. I love watching a protagonist start out small, slowly mastering their skills, and then seeing them face epic battles as they grow stronger. It’s the kind of story that can keep me hooked for hours. Every universe feels so unique, and I enjoy following the characters as they push their limits and discover what they’re truly capable of."
  },
  {
    "objectID": "about.html#logo",
    "href": "about.html#logo",
    "title": "About",
    "section": "Logo",
    "text": "Logo\nMy website logo is an ambigram of “RSSR” , my initials. I’ve been fascinated by ambigrams ever since I came across them in Angels and Demons. There’s something so cool about how a word can be read from different angles or orientations."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RS Saran",
    "section": "",
    "text": "Hi there! I’m Saran. I specialize in data engineering, analytics, and machine learning, with a growing focus on machine learning. I’m passionate about uncovering insights and developing intelligent solutions to solve complex and impactful challenges. Outside of work, I’m an avid fan of martial cultivation stories, including mangas, manhwas, and web novels, and I also enjoy watching a variety of movies. Feel free to explore my site to learn more about my work and passions!"
  },
  {
    "objectID": "posts/20241209_tale_of_two_lands/index.html",
    "href": "posts/20241209_tale_of_two_lands/index.html",
    "title": "The Tale of the Twin Lands",
    "section": "",
    "text": "Disclaimer: This story is entirely fictitious, heavily biased by martial cultivation web novels, and shaped by an overactive imagination. Read with humor and a love for epic, overpowered kings! 😄\nLong ago, in the heart of an ancient continent, there existed a vast, unified kingdom. This realm was cradled by mighty rivers, sprawling plains, and towering mountains that kissed the sky. At its northern edge rose a range of peaks so high and unyielding that the people believed they were the gates to the heavens themselves. These mountains, revered as the Great Wall of the Sky, became a symbol of strength and divine presence.\nThe kingdom was ruled by a dynasty of warrior-philosopher kings, men and women of unparalleled martial prowess and unshakable ideals. Legends spoke of their mystical abilities—how they could summon storms, command beasts, and even manipulate the flow of time itself. These rulers were not just warriors but also stewards of wisdom, guiding their people with principles of harmony, justice, and reverence for life.\nUnder their rule, the people flourished. They built thriving cities, raised towering monuments, and cultivated a deep connection to the natural and spiritual world. They believed that the cosmos was an intricate balance of forces, and humans, with their wisdom and flaws, were at its center. Life in the kingdom revolved around honoring these forces—through rituals, festivals, and the celebration of human greatness.\n\n\nA Shared Worldview\nThe people of the kingdom revered those who achieved greatness, be it a mighty warrior, a wise sage, or a selfless leader. These figures, regardless of their origins, were honored through tales, monuments, and annual festivities. At the same time, families maintained deep respect for their ancestors, believing that the spirits of the departed guided the living and protected their descendants.\nIn every village and city, shrines to ancestors stood alongside altars dedicated to the kingdom’s heroes and sages. The people found no contradiction in these practices; their world was a tapestry where the past, present, and extraordinary were intertwined.\n\n\n\nThe Division of Belief\nBut as generations passed, subtle shifts began to emerge in the way the people interpreted their world. The Great Wall of the Sky, which had long served as a symbol of unity, began to act as a natural divider between the kingdom’s northern and southern regions. The mountains made travel arduous, and over time, the cultural and spiritual practices on either side began to diverge.\nIn the southern lands, communities started to see divinity in human potential. They believed that truly extraordinary individuals—those whose wisdom, compassion, or power seemed beyond mortal reach—were manifestations of the divine. Over time, this belief grew into worship. Saints, warriors, and sages were deified, their names immortalized in temples and scriptures. The people here began to see the divine not as distant or untouchable but as something that could be embodied by the most virtuous among them.\nIn the northern lands, however, the people turned inward, emphasizing the sanctity of family lineage. They believed that the wisdom of ancestors was the most sacred force guiding humanity. While they admired the kingdom’s heroes and sages, they saw them as examples to emulate, not as beings to worship. Instead, they devoted their rituals to honoring their ancestors, whose spirits they believed lived on to watch over and guide their descendants.\nThese differences were subtle at first, but they deepened over centuries. The southern lands became a place of diverse spiritual expression, with countless deities celebrated for their unique virtues. The northern lands grew into a society of disciplined order, where ancestral reverence shaped every aspect of life.\n\n\n\nThe Transformation\nThe divide became more pronounced with the fall of the warrior-philosopher dynasty. In the south, the people carried forward the ideals of their mystical kings, celebrating the divine in all its forms. They believed that greatness was not confined to one’s birth or family but could arise from anyone who embodied cosmic truth. Over time, their society evolved into a tapestry of gods, saints, and traditions, each reflecting a fragment of the infinite divine.\nIn the north, the memory of the kings was preserved in tales, but the people leaned on the strength of their familial bonds. They built their society around the wisdom of the past, valuing tradition and continuity above all. Ancestral worship became not just a spiritual practice but the very foundation of their identity.\nAnd so, the unified kingdom of old was no more. Two distinct lands emerged, divided not by war or conquest but by the mountains and the beliefs that grew on either side of them.\n\n\n\nThe Lands We Know Today\nThe southern lands, with their kaleidoscope of gods and spiritual traditions, became what we now call Land of Royal Tigers. Here, the people continue to celebrate the divine in countless forms, seeing the extraordinary in both the human and the infinite.\nThe northern lands, with their disciplined society and profound reverence for ancestors, became Land of Dragons. Here, the people honor their lineage and uphold traditions that connect them to their storied past.\nThough the Great Wall of the Sky still stands as a physical divide, the shared roots of these lands remind us of a time when they were one—a time when kings wielded mystical power, and the people, united in their reverence, sought meaning in both the greatness of humanity and the guidance of the past."
  },
  {
    "objectID": "projects/20241201_me_in_moments/index.html",
    "href": "projects/20241201_me_in_moments/index.html",
    "title": "MO-ME-NTS",
    "section": "",
    "text": "streamlit app  source code\n\n\n\nIntroduction and Problem Statement\nEvents are moments of joy, connection, and memories captured through countless photos snapped across multiple devices. However, the joy of reminiscing these moments often turns into a tedious task—finding the photos where you are present amidst a sea of images.\nThis is where Me in Moments comes in. Designed for event-goers, Me in Moments simplifies the process by allowing users to upload a reference image of themselves. The app then scans the entire collection of event photos to find the ones they appear in, providing a fast and accurate solution to a common problem.\n\n\nFeatures and Functionalities\nMe in Moments offers a suite of features tailored to enhance the photo discovery experience for event-goers:\n\nFacial Similarity Search: Upload a reference photo and all the event photos, and the app scans through the event’s photo collection to find matching photos.\n\nAdjustable Similarity Threshold: Fine-tune the sensitivity of the facial matching algorithm to get results that align with your preferences.\n\nDownload Matches: Save time by downloading all identified photos with just one click.\n\nFriendly Interface: Built with Streamlit, the app delivers an intuitive and interactive experience, making it accessible for users of all technical backgrounds.\n\n\n\nTech Stack\nMe in Moments utilizes a combination of robust tools and frameworks to deliver accurate facial recognition and a seamless user experience:\n\n1. DeepFace (RetinaFace, FaceNet512)\nDeepFace is a powerful library for facial recognition, providing access to advanced models like RetinaFace and FaceNet512.\n\nRetinaFace: Excels at detecting faces under diverse conditions, including varied angles and lighting, ensuring reliable face detection across event photos.\n\nFaceNet512: Generates precise facial embeddings—unique numerical representations of faces—enabling accurate and efficient comparison of a reference image to event photos.\n\nWhy DeepFace? The library simplifies the implementation of state-of-the-art facial recognition models, achieving high accuracy without requiring extensive expertise in machine learning.\n\n\n\n2. OpenCV (For Image Processing)\nOpenCV is a versatile library for image processing, ensuring the input data is optimized for DeepFace’s recognition models.\n\nImage Preprocessing: Handles essential tasks like resizing, cropping, and adjusting image quality to improve recognition accuracy.\n\nReal-Time Processing: Enables efficient handling of large photo collections, ensuring the app performs well even with significant workloads.\n\nIntegration: Works seamlessly with DeepFace and Streamlit, ensuring smooth workflows from image handling to recognition and display.\n\n\n\n3. Streamlit (For MVP Deployment)\nStreamlit is an ideal framework for rapid MVP (Minimum Viable Product) development, offering speed and simplicity without sacrificing user interactivity.\n\nSpeed & Simplicity: Streamlit allows for quick prototyping with minimal coding, letting developers focus on core features like facial recognition.\n\nInteractive UI: Built-in components such as file uploads, sliders, and buttons ensure an intuitive experience. Users can upload a reference photo, adjust the similarity threshold, and download results effortlessly.\n\nSeamless Deployment: Streamlit’s straightforward deployment process makes it easy to share the app online without complex setup, making it perfect for launching MVPs.\n\nWhy Streamlit? While frameworks like Flask or Django offer more extensive capabilities, Streamlit provides a faster and simpler solution for building data-driven apps, especially during the MVP stage.\n\n\n\n\nImplementation\n\nWorkflow\n\n\n\nworkflow-diagram\n\n\n\nImage Input\nUsers upload a reference image and a collection of target images.\nImage Processing\nThe ImageProcessor class processes each image using OpenCV to generate multiple enhanced versions:\n\nGray: Grayscale representation.\n\nGray_he: Grayscale with histogram equalization.\n\nYUV_he: YUV color space with histogram equalization.\n\nFace Embedding and Similarity Computation\nThe FaceEmbeddingService plays a central role by:\n\nDetecting faces in the processed images using DeepFace.\n\nGenerating embeddings (numerical representations) for each detected face.\n\nProviding a similarity function to compute cosine distance between embeddings.\n\nReference Embeddings\nThe app processes the reference image through the ImageProcessor and FaceEmbeddingService, storing embeddings for all enhanced versions.\nTarget Image Comparison\nFor each target image:\n\nThe ImageProcessor generates processed versions.\n\nThe FaceEmbeddingService computes embeddings for detected faces.\n\nEach target embedding is compared against the reference embeddings, and the minimum similarity score is recorded.\n\nCaching and Display\n\nAll similarity scores are cached for efficient retrieval.\n\nA slider (default threshold: 0.4) allows users to adjust matching sensitivity.\n\nImages with similarity scores below the threshold are displayed, helping users identify relevant photos.\n\n\n\n\n\nChallenges and Solutions\nDuring the development of Me in Moments, one significant challenge was ensuring accurate facial similarity comparisons, especially when users were photographed in different lighting conditions. Simple direct comparisons between images were not providing reliable results, as lighting variations often affected the facial features.\n\nSolution\nTo address this, I implemented a preprocessing step using OpenCV to generate multiple versions of the images before passing them to the facial recognition model:\n- Gray: A standard grayscale version of the image.\n- Gray_he: A grayscale version with histogram equalization to improve contrast and brightness.\n- YUV_he: YUV color space with histogram equalization for better feature extraction.\nThese preprocessing techniques enhanced the accuracy of facial detection and similarity comparison, allowing Me in Moments to perform better under varying lighting conditions.\n\n\n\nFuture Enhancements\nThe current version of Me in Moments provides a quick and accurate facial similarity search for event photos. Moving forward, several key improvements are planned to enhance scalability, performance, and user experience:\n\nScalability\nTo better handle larger datasets and improve efficiency, the following improvements are in the pipeline:\n- Centralized Storage: Users should be able to upload photos from multiple devices to a centralized storage system, making it easier to manage large collections of event photos.\n- Parallel Processing: Images could be processed in parallel as soon as they are uploaded, significantly speeding up the face recognition and embedding generation process.\n- Vector Database: Face embeddings could be stored in a vector database, enabling fast and scalable similarity searches, even across large datasets.\n- Unified User Interface: The UI will be enhanced to allow users to upload reference images and search for matches across the entire event’s photo collection."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Sakha: Building a Chatbot That Cares\n\n\nA digital friend, designed to check in on you and help you improve your mood\n\n\n\n\n\n\nApr 16, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSerene Solace - Sophy\n\n\nA mental health assistant, designed to listen to you and provide mental support\n\n\n\n\n\n\nJan 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMO-ME-NTS\n\n\nMe in Moments, an app that helps you find your photos from event collections, using DeepFace, OpenCV, and Streamlit.\n\n\n\n\n\n\nDec 1, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/20250122_serene_solace_sakha/plan.html",
    "href": "projects/20250122_serene_solace_sakha/plan.html",
    "title": "RS Saran",
    "section": "",
    "text": "Here’s a milestone-based roadmap to guide your project development:\n\n\nPhase 1: Research and Planning\n\nDefine Scope and Objectives\n\nFinalize the chatbot’s purpose, boundaries, and core functionalities (e.g., emotional check-ins, activity suggestions).\n\nIdentify target audience and their needs.\n\nChoose Tools and Technology Stack\n\nSelect the appropriate LLM platform (e.g., OpenAI API, Hugging Face).\n\nPlan infrastructure for personalization (e.g., database for user preferences).\n\nDesign Personality and Behavior\n\nDefine bot persona (name, tone, style).\n\nWrite a system prompt to guide behavior.\n\nLegal and Ethical Considerations\n\nEnsure compliance with privacy regulations (GDPR, etc.).\n\nDevelop disclaimers and ethical boundaries for emotional support.\n\n\n\n\n\nPhase 2: Prototype Development\n\nCore Features\n\nBuild a framework for initial personalization (ask targeted questions in first chat).\n\nImplement empathetic and supportive response generation using LLMs.\n\nDefine fallback and escalation strategies for distressing inputs (e.g., directing to professional resources).\n\nDatabase Integration\n\nCreate a system to store user preferences securely for personalized suggestions.\n\nSafety Mechanisms\n\nImplement filters for sensitive or harmful language.\n\nDevelop response templates for distress scenarios, including redirection to helplines.\n\n\n\n\n\nPhase 3: Testing and Iteration\n\nPrototype Evaluation\n\nTest the chatbot internally using AI-based evaluation and predefined benchmarks (relevance, empathy, safety).\n\nGather feedback from stakeholders and improve the bot.\n\nBeta Launch\n\nRelease the bot to a small group of users for real-world testing.\n\nCollect user feedback on empathy, personalization, and usability.\n\nIterate Based on Feedback\n\nRefine conversation flows, improve personalization, and enhance safety mechanisms.\n\n\n\n\n\nPhase 4: Full Development\n\nScale Features\n\nAdd more activity suggestions based on user preferences.\n\nImprove personalization by training a lightweight user model (optional).\n\nEnhance Accessibility\n\nOptimize the bot for multiple platforms (mobile, web, chat apps).\n\nPolish UI/UX\n\nDesign a user-friendly interface for chat interactions.\n\nInclude visuals or interactive elements if needed.\n\n\n\n\n\nPhase 5: Deployment and Maintenance\n\nPublic Launch\n\nDeploy the chatbot on the chosen platform(s).\n\nAnnounce its availability to the target audience.\n\nMonitor and Maintain\n\nSet up analytics to track usage, satisfaction, and response quality.\n\nContinuously update the bot with new activities and suggestions.\n\nRegularly review flagged conversations for safety improvements.\n\n\n\n\n\nPhase 6: Expansion\n\nLocalization\n\nAdd support for multiple languages if needed.\n\nAdditional Features\n\nIntroduce seasonal or event-based suggestions (e.g., holiday activities).\n\nExpand resource database with location-specific professional help options.\n\nCommunity Engagement\n\nBuild a community of users to gather insights and improve the bot.\n\n\n\nWould you like help with any specific milestone or its details?"
  },
  {
    "objectID": "projects/20250122_serene_solace_sakha/index.html",
    "href": "projects/20250122_serene_solace_sakha/index.html",
    "title": "Sakha: Building a Chatbot That Cares",
    "section": "",
    "text": "source code  demo chat"
  },
  {
    "objectID": "projects/20250122_serene_solace_sakha/index.html#building-sakha-one-decision-at-a-time",
    "href": "projects/20250122_serene_solace_sakha/index.html#building-sakha-one-decision-at-a-time",
    "title": "Sakha: Building a Chatbot That Cares",
    "section": "Building Sakha: One Decision at a Time",
    "text": "Building Sakha: One Decision at a Time\n\nWhere Do You Even Start?\nI didn’t set out with a 100-step master plan. Like most projects, Sakha started with a question: How do I make a chatbot feel like a friend—not just in tone, but in behavior? I knew I needed something flexible, expressive, and capable of holding a conversation in a way that didn’t feel robotic. That naturally pointed me toward LLMs.\n\n\nChoosing the Mind – LLMs and How I Picked Mine\nWith dozens of options, the choice wasn’t easy. GPT-4? Claude? LLaMA? Each model had tradeoffs in terms of access, pricing, and openness. Eventually, I chose to use open-source LLMs hosted through Groq’s API. Why?\n\nSpeed: Groq’s inference speeds were impressive.\nFlexibility: It supports open-source models like LLaMA3.3, which means I’m not locked into one ecosystem.\nFuture-ready: I can always self-host these models later if needed, thanks to their open-source nature.\n\nI wrapped this through LangChain, which made it super easy to swap out models during experimentation and build proofs-of-concept quickly without worrying about underlying LLM plumbing.\n\n\n\nLangGraph – Giving Structure to Conversations\nOnce I picked the brain, I needed to figure out how to guide it. Not every conversation should be flat and linear—some needed state, branching logic, and even tool use.\nThat’s where LangGraph came in.\n\nIt lets me create multi-step workflows.\nI can embed conditional logic into conversations (e.g., “Is the user in distress?” → switch flow).\nIt gives me conversational memory for continuity.\nAnd it integrates smoothly with external tools and APIs.\n\nLangGraph powers Sakha’s conversation graph—the engine that routes how chats progress depending on context and user state.\n\n\n\nWhy Flask for the UI?\nI kept the frontend simple—just a few HTML pages with some JavaScript—but even that needed a stable backend.\nFlask fit perfectly: - Lightweight and quick to set up - Easy to plug into Python-based LLM pipelines - Great for rapid prototyping and deployment\nIt let me focus on core logic without worrying about UI framework overhead.\n\n\n\nCore Internals – A Quick Tour\nAt the heart of Sakha, there are a few key components:\n\nConversation Processor\nThe entry point. It: - Takes the user’s input - Does basic preprocessing (cleaning, formatting) - Passes it through the conversation graph to get an appropriate response\n\n\nSupervisor Node\nThe first stop in every conversation. - It determines if the bot should continue with a normal conversation or escalate to crisis support - This was important: we wanted to check in on users, but also not ignore red flags when they show up\n\n\nChat Engine\nIf the conversation isn’t a crisis, we route it here. - It decides which chat flow to run: activity suggestion, reminder, or follow-up - This modularity helps keep the system clean - Each flow exists because one prompt can’t do everything—we needed different instructions, behaviors, and tools depending on the use case\nThis structure helped us build conversations that felt purpose-driven while still being emotionally supportive.\n\n\n\n\nWhat’s Next?\nSakha isn’t finished—there are plans for better testing, more flows, and richer context tracking. But the current system is functional, modular, and grounded in thoughtful decisions that balance feasibility with ambition."
  }
]